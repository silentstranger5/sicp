#lang scheme
(provide deriv newton-method newton-transform sqrt-newton)
(require "fixed-point")
(define (square x) (* x x))
(define dx 0.00001)
(define (deriv g)
  (lambda (x) (/ (- (g (+ x dx)) (g x)) dx)))
(define (newton-transform g)
  (lambda (x) (- x (/ (g x) ((deriv g) x)))))
(define (newton-method g guess)
  (fixed-point (newton-transform g) guess))
(define (sqrt-newton x)
  (newton-method
    (lambda (y) (- (square y) x))
    1.0))
